{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule convertFromRawToDraftState\n * \n */\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar _extends = _assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar ContentBlock = require('./ContentBlock');\n\nvar ContentState = require('./ContentState');\n\nvar DraftEntity = require('./DraftEntity');\n\nvar Immutable = require('immutable');\n\nvar createCharacterList = require('./createCharacterList');\n\nvar decodeEntityRanges = require('./decodeEntityRanges');\n\nvar decodeInlineStyleRanges = require('./decodeInlineStyleRanges');\n\nvar generateRandomKey = require('./generateRandomKey');\n\nvar Map = Immutable.Map;\n\nfunction convertFromRawToDraftState(rawState) {\n  var blocks = rawState.blocks,\n      entityMap = rawState.entityMap;\n  var fromStorageToLocal = {}; // TODO: Update this once we completely remove DraftEntity\n\n  Object.keys(entityMap).forEach(function (storageKey) {\n    var encodedEntity = entityMap[storageKey];\n    var type = encodedEntity.type,\n        mutability = encodedEntity.mutability,\n        data = encodedEntity.data;\n\n    var newKey = DraftEntity.__create(type, mutability, data || {});\n\n    fromStorageToLocal[storageKey] = newKey;\n  });\n  var contentBlocks = blocks.map(function (block) {\n    var key = block.key,\n        type = block.type,\n        text = block.text,\n        depth = block.depth,\n        inlineStyleRanges = block.inlineStyleRanges,\n        entityRanges = block.entityRanges,\n        data = block.data;\n    key = key || generateRandomKey();\n    type = type || 'unstyled';\n    depth = depth || 0;\n    inlineStyleRanges = inlineStyleRanges || [];\n    entityRanges = entityRanges || [];\n    data = Map(data);\n    var inlineStyles = decodeInlineStyleRanges(text, inlineStyleRanges); // Translate entity range keys to the DraftEntity map.\n\n    var filteredEntityRanges = entityRanges.filter(function (range) {\n      return fromStorageToLocal.hasOwnProperty(range.key);\n    }).map(function (range) {\n      return _extends({}, range, {\n        key: fromStorageToLocal[range.key]\n      });\n    });\n    var entities = decodeEntityRanges(text, filteredEntityRanges);\n    var characterList = createCharacterList(inlineStyles, entities);\n    return new ContentBlock({\n      key: key,\n      type: type,\n      text: text,\n      depth: depth,\n      characterList: characterList,\n      data: data\n    });\n  });\n  return ContentState.createFromBlockArray(contentBlocks);\n}\n\nmodule.exports = convertFromRawToDraftState;","map":{"version":3,"sources":["/Users/zhengjie/Documents/Fulltime/nba_app/node_modules/draft-js/lib/convertFromRawToDraftState.js"],"names":["_assign","require","_extends","target","i","arguments","length","source","key","Object","prototype","hasOwnProperty","call","ContentBlock","ContentState","DraftEntity","Immutable","createCharacterList","decodeEntityRanges","decodeInlineStyleRanges","generateRandomKey","Map","convertFromRawToDraftState","rawState","blocks","entityMap","fromStorageToLocal","keys","forEach","storageKey","encodedEntity","type","mutability","data","newKey","__create","contentBlocks","map","block","text","depth","inlineStyleRanges","entityRanges","inlineStyles","filteredEntityRanges","filter","range","entities","characterList","createFromBlockArray","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule convertFromRawToDraftState\n * \n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar ContentBlock = require('./ContentBlock');\nvar ContentState = require('./ContentState');\nvar DraftEntity = require('./DraftEntity');\nvar Immutable = require('immutable');\n\nvar createCharacterList = require('./createCharacterList');\nvar decodeEntityRanges = require('./decodeEntityRanges');\nvar decodeInlineStyleRanges = require('./decodeInlineStyleRanges');\nvar generateRandomKey = require('./generateRandomKey');\n\nvar Map = Immutable.Map;\n\n\nfunction convertFromRawToDraftState(rawState) {\n  var blocks = rawState.blocks,\n      entityMap = rawState.entityMap;\n\n\n  var fromStorageToLocal = {};\n\n  // TODO: Update this once we completely remove DraftEntity\n  Object.keys(entityMap).forEach(function (storageKey) {\n    var encodedEntity = entityMap[storageKey];\n    var type = encodedEntity.type,\n        mutability = encodedEntity.mutability,\n        data = encodedEntity.data;\n\n    var newKey = DraftEntity.__create(type, mutability, data || {});\n    fromStorageToLocal[storageKey] = newKey;\n  });\n\n  var contentBlocks = blocks.map(function (block) {\n    var key = block.key,\n        type = block.type,\n        text = block.text,\n        depth = block.depth,\n        inlineStyleRanges = block.inlineStyleRanges,\n        entityRanges = block.entityRanges,\n        data = block.data;\n\n    key = key || generateRandomKey();\n    type = type || 'unstyled';\n    depth = depth || 0;\n    inlineStyleRanges = inlineStyleRanges || [];\n    entityRanges = entityRanges || [];\n    data = Map(data);\n\n    var inlineStyles = decodeInlineStyleRanges(text, inlineStyleRanges);\n\n    // Translate entity range keys to the DraftEntity map.\n    var filteredEntityRanges = entityRanges.filter(function (range) {\n      return fromStorageToLocal.hasOwnProperty(range.key);\n    }).map(function (range) {\n      return _extends({}, range, { key: fromStorageToLocal[range.key] });\n    });\n\n    var entities = decodeEntityRanges(text, filteredEntityRanges);\n    var characterList = createCharacterList(inlineStyles, entities);\n\n    return new ContentBlock({ key: key, type: type, text: text, depth: depth, characterList: characterList, data: data });\n  });\n\n  return ContentState.createFromBlockArray(contentBlocks);\n}\n\nmodule.exports = convertFromRawToDraftState;"]},"metadata":{},"sourceType":"script"}