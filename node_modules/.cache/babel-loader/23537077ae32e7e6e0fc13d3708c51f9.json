{"ast":null,"code":"var _jsxFileName = \"/Users/zhengjie/Documents/Fulltime/nba_app/src/components/widgets/fileUploader/fileUploader.js\";\nimport React, { Component } from 'react';\nimport { firebase, firebaseLooper } from '../../../firebase';\nimport FileUploader from 'react-firebase-file-uploader';\n\nclass Uploader extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      isUploading: false,\n      progress: 0,\n      fileURL: ''\n    };\n\n    this.handleUploadStart = () => {\n      this.setState({\n        isUploading: true,\n        progress: 0\n      });\n    };\n\n    this.handleUploadError = error => {\n      this.setState({\n        isUploading: false\n      });\n      console.log(error);\n    };\n\n    this.handleProgress = progress => {\n      this.setState({\n        progress\n      });\n    };\n\n    this.handleUploadSuccess = filename => {\n      this.setState({\n        name: filename,\n        progress: 100,\n        isUploading: false\n      });\n      firebase.storage().ref('images').child(filename).getDownloadURL().then(url => {\n        this.setState({\n          fileURL: url\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FileUploader, {\n      accept: \"image/*\" //Add whatever types of image\n      ,\n      name: \"image\",\n      randomizeFilename: true //Store this name to firebase\n      //Create a directory to store image in firebase\n      ,\n      storageRef: firebase.storage().ref('image'),\n      onUploadStart: this.handleUploadStart,\n      onUploadError: this.handleUploadError,\n      onUploadSuccess: this.handleUploadSuccess,\n      onProgress: this.handleProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), this.state.isUploading ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Progress:\", this.state.progress) : null, this.state.fileURL ? React.createElement(\"img\", {\n      style: {\n        width: '700px'\n      },\n      src: this.state.fileURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Uploader;","map":{"version":3,"sources":["/Users/zhengjie/Documents/Fulltime/nba_app/src/components/widgets/fileUploader/fileUploader.js"],"names":["React","Component","firebase","firebaseLooper","FileUploader","Uploader","state","name","isUploading","progress","fileURL","handleUploadStart","setState","handleUploadError","error","console","log","handleProgress","handleUploadSuccess","filename","storage","ref","child","getDownloadURL","then","url","render","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,mBAAzC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAgC;AAAA;AAAA;AAAA,SAE5BK,KAF4B,GAEpB;AACJC,MAAAA,IAAI,EAAC,EADD;AAEJC,MAAAA,WAAW,EAAC,KAFR;AAGJC,MAAAA,QAAQ,EAAC,CAHL;AAIJC,MAAAA,OAAO,EAAC;AAJJ,KAFoB;;AAAA,SAS5BC,iBAT4B,GASR,MAAK;AACrB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAE,IADH;AAEVC,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIH,KAd2B;;AAAA,SAgB5BI,iBAhB4B,GAgBPC,KAAD,IAAW;AAC3B,WAAKF,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAC;AADF,OAAd;AAIAO,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAtB2B;;AAAA,SAwB5BG,cAxB4B,GAwBVR,QAAD,IAAa;AAC1B,WAAKG,QAAL,CAAc;AACVH,QAAAA;AADU,OAAd;AAGH,KA5B2B;;AAAA,SA8B5BS,mBA9B4B,GA8BLC,QAAD,IAAc;AAChC,WAAKP,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAEY,QADI;AAEVV,QAAAA,QAAQ,EAAC,GAFC;AAGVD,QAAAA,WAAW,EAAC;AAHF,OAAd;AAKAN,MAAAA,QAAQ,CAACkB,OAAT,GAAmBC,GAAnB,CAAuB,QAAvB,EACCC,KADD,CACOH,QADP,EACiBI,cADjB,GAECC,IAFD,CAEOC,GAAG,IAAI;AACV,aAAKb,QAAL,CAAc;AACVF,UAAAA,OAAO,EAACe;AADE,SAAd;AAGH,OAND;AAOH,KA3C2B;AAAA;;AA+C5BC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AACI,MAAA,MAAM,EAAC,SADX,CACoB;AADpB;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,iBAAiB,MAHrB,CAGqB;AACjB;AAJJ;AAKI,MAAA,UAAU,EAAExB,QAAQ,CAACkB,OAAT,GAAmBC,GAAnB,CAAuB,OAAvB,CALhB;AAMI,MAAA,aAAa,EAAE,KAAKV,iBANxB;AAOI,MAAA,aAAa,EAAE,KAAKE,iBAPxB;AAQI,MAAA,eAAe,EAAE,KAAKK,mBAR1B;AASI,MAAA,UAAU,EAAE,KAAKD,cATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAYM,KAAKX,KAAL,CAAWE,WAAX,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKF,KAAL,CAAWG,QAAxB,CADF,GAEI,IAdV,EAiBQ,KAAKH,KAAL,CAAWI,OAAX,GACA;AAAK,MAAA,KAAK,EAAE;AACRiB,QAAAA,KAAK,EAAC;AADE,OAAZ;AAEE,MAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWI,OAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAIC,IArBT,CADJ;AA2BH;;AA3E2B;;AA8EhC,eAAeL,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { firebase, firebaseLooper } from '../../../firebase';\nimport FileUploader from 'react-firebase-file-uploader';\n\nclass Uploader extends Component{\n\n    state = {\n        name:'',\n        isUploading:false,\n        progress:0,\n        fileURL:''\n    }\n\n    handleUploadStart = () =>{\n        this.setState({\n            isUploading: true,\n            progress: 0\n        })\n    }\n\n    handleUploadError = (error) => {\n        this.setState({\n            isUploading:false\n            \n        })\n        console.log(error)\n    }\n\n    handleProgress = (progress) =>{\n        this.setState({\n            progress\n        })\n    }\n\n    handleUploadSuccess = (filename) => {\n        this.setState({\n            name: filename,\n            progress:100,\n            isUploading:false\n        })\n        firebase.storage().ref('images')\n        .child(filename).getDownloadURL()\n        .then( url => {\n            this.setState({\n                fileURL:url\n            })\n        })\n    }\n\n\n\n    render(){\n        return(\n            <div>\n                <FileUploader\n                    accept=\"image/*\"//Add whatever types of image\n                    name=\"image\"\n                    randomizeFilename//Store this name to firebase\n                    //Create a directory to store image in firebase\n                    storageRef={firebase.storage().ref('image')}\n                    onUploadStart={this.handleUploadStart}\n                    onUploadError={this.handleUploadError}\n                    onUploadSuccess={this.handleUploadSuccess}\n                    onProgress={this.handleProgress}\n                />\n                { this.state.isUploading ? \n                    <p>Progress:{this.state.progress}</p>\n                    : null\n                }\n                {\n                    this.state.fileURL ?\n                    <img style={{\n                        width:'700px'\n                    }}src={this.state.fileURL}/>\n                    :null\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default Uploader;"]},"metadata":{},"sourceType":"module"}