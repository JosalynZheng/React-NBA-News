{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule moveBlockInContentState\n * @typechecks\n * \n */\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\nfunction moveBlockInContentState(contentState, blockToBeMoved, targetBlock, insertionMode) {\n  !(blockToBeMoved.getKey() !== targetBlock.getKey()) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Block cannot be moved next to itself.') : invariant(false) : void 0;\n  !(insertionMode !== 'replace') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Replacing blocks is not supported.') : invariant(false) : void 0;\n  var targetKey = targetBlock.getKey();\n  var blockBefore = contentState.getBlockBefore(targetKey);\n  var blockAfter = contentState.getBlockAfter(targetKey);\n  var blockMap = contentState.getBlockMap();\n  var blockMapWithoutBlockToBeMoved = blockMap['delete'](blockToBeMoved.getKey());\n  var blocksBefore = blockMapWithoutBlockToBeMoved.toSeq().takeUntil(function (v) {\n    return v === targetBlock;\n  });\n  var blocksAfter = blockMapWithoutBlockToBeMoved.toSeq().skipUntil(function (v) {\n    return v === targetBlock;\n  }).skip(1);\n  var newBlocks = void 0;\n\n  if (insertionMode === 'before') {\n    !(!blockBefore || blockBefore.getKey() !== blockToBeMoved.getKey()) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Block cannot be moved next to itself.') : invariant(false) : void 0;\n    newBlocks = blocksBefore.concat([[blockToBeMoved.getKey(), blockToBeMoved], [targetBlock.getKey(), targetBlock]], blocksAfter).toOrderedMap();\n  } else if (insertionMode === 'after') {\n    !(!blockAfter || blockAfter.getKey() !== blockToBeMoved.getKey()) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Block cannot be moved next to itself.') : invariant(false) : void 0;\n    newBlocks = blocksBefore.concat([[targetBlock.getKey(), targetBlock], [blockToBeMoved.getKey(), blockToBeMoved]], blocksAfter).toOrderedMap();\n  }\n\n  return contentState.merge({\n    blockMap: newBlocks,\n    selectionBefore: contentState.getSelectionAfter(),\n    selectionAfter: contentState.getSelectionAfter().merge({\n      anchorKey: blockToBeMoved.getKey(),\n      focusKey: blockToBeMoved.getKey()\n    })\n  });\n}\n\nmodule.exports = moveBlockInContentState;","map":{"version":3,"sources":["/Users/zhengjie/Documents/Fulltime/nba_app/node_modules/draft-js/lib/moveBlockInContentState.js"],"names":["invariant","require","moveBlockInContentState","contentState","blockToBeMoved","targetBlock","insertionMode","getKey","process","env","NODE_ENV","targetKey","blockBefore","getBlockBefore","blockAfter","getBlockAfter","blockMap","getBlockMap","blockMapWithoutBlockToBeMoved","blocksBefore","toSeq","takeUntil","v","blocksAfter","skipUntil","skip","newBlocks","concat","toOrderedMap","merge","selectionBefore","getSelectionAfter","selectionAfter","anchorKey","focusKey","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule moveBlockInContentState\n * @typechecks\n * \n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\nfunction moveBlockInContentState(contentState, blockToBeMoved, targetBlock, insertionMode) {\n  !(blockToBeMoved.getKey() !== targetBlock.getKey()) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Block cannot be moved next to itself.') : invariant(false) : void 0;\n\n  !(insertionMode !== 'replace') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Replacing blocks is not supported.') : invariant(false) : void 0;\n\n  var targetKey = targetBlock.getKey();\n  var blockBefore = contentState.getBlockBefore(targetKey);\n  var blockAfter = contentState.getBlockAfter(targetKey);\n\n  var blockMap = contentState.getBlockMap();\n  var blockMapWithoutBlockToBeMoved = blockMap['delete'](blockToBeMoved.getKey());\n  var blocksBefore = blockMapWithoutBlockToBeMoved.toSeq().takeUntil(function (v) {\n    return v === targetBlock;\n  });\n  var blocksAfter = blockMapWithoutBlockToBeMoved.toSeq().skipUntil(function (v) {\n    return v === targetBlock;\n  }).skip(1);\n\n  var newBlocks = void 0;\n\n  if (insertionMode === 'before') {\n    !(!blockBefore || blockBefore.getKey() !== blockToBeMoved.getKey()) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Block cannot be moved next to itself.') : invariant(false) : void 0;\n\n    newBlocks = blocksBefore.concat([[blockToBeMoved.getKey(), blockToBeMoved], [targetBlock.getKey(), targetBlock]], blocksAfter).toOrderedMap();\n  } else if (insertionMode === 'after') {\n    !(!blockAfter || blockAfter.getKey() !== blockToBeMoved.getKey()) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Block cannot be moved next to itself.') : invariant(false) : void 0;\n\n    newBlocks = blocksBefore.concat([[targetBlock.getKey(), targetBlock], [blockToBeMoved.getKey(), blockToBeMoved]], blocksAfter).toOrderedMap();\n  }\n\n  return contentState.merge({\n    blockMap: newBlocks,\n    selectionBefore: contentState.getSelectionAfter(),\n    selectionAfter: contentState.getSelectionAfter().merge({\n      anchorKey: blockToBeMoved.getKey(),\n      focusKey: blockToBeMoved.getKey()\n    })\n  });\n}\n\nmodule.exports = moveBlockInContentState;"]},"metadata":{},"sourceType":"script"}