{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnBlur\n * \n */\n'use strict';\n\nvar EditorState = require('./EditorState');\n\nvar containsNode = require('fbjs/lib/containsNode');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction editOnBlur(editor, e) {\n  // In a contentEditable element, when you select a range and then click\n  // another active element, this does trigger a `blur` event but will not\n  // remove the DOM selection from the contenteditable.\n  // This is consistent across all browsers, but we prefer that the editor\n  // behave like a textarea, where a `blur` event clears the DOM selection.\n  // We therefore force the issue to be certain, checking whether the active\n  // element is `body` to force it when blurring occurs within the window (as\n  // opposed to clicking to another tab or window).\n  if (getActiveElement() === document.body) {\n    var _selection = global.getSelection();\n\n    var editorNode = editor.refs.editor;\n\n    if (_selection.rangeCount === 1 && containsNode(editorNode, _selection.anchorNode) && containsNode(editorNode, _selection.focusNode)) {\n      _selection.removeAllRanges();\n    }\n  }\n\n  var editorState = editor._latestEditorState;\n  var currentSelection = editorState.getSelection();\n\n  if (!currentSelection.getHasFocus()) {\n    return;\n  }\n\n  var selection = currentSelection.set('hasFocus', false);\n  editor.props.onBlur && editor.props.onBlur(e);\n  editor.update(EditorState.acceptSelection(editorState, selection));\n}\n\nmodule.exports = editOnBlur;","map":{"version":3,"sources":["/Users/zhengjie/Documents/Fulltime/nba_app/node_modules/draft-js/lib/editOnBlur.js"],"names":["EditorState","require","containsNode","getActiveElement","editOnBlur","editor","e","document","body","_selection","global","getSelection","editorNode","refs","rangeCount","anchorNode","focusNode","removeAllRanges","editorState","_latestEditorState","currentSelection","getHasFocus","selection","set","props","onBlur","update","acceptSelection","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAYA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIC,YAAY,GAAGD,OAAO,CAAC,uBAAD,CAA1B;;AACA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,2BAAD,CAA9B;;AAEA,SAASG,UAAT,CAAoBC,MAApB,EAA4BC,CAA5B,EAA+B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAIH,gBAAgB,OAAOI,QAAQ,CAACC,IAApC,EAA0C;AACxC,QAAIC,UAAU,GAAGC,MAAM,CAACC,YAAP,EAAjB;;AACA,QAAIC,UAAU,GAAGP,MAAM,CAACQ,IAAP,CAAYR,MAA7B;;AACA,QAAII,UAAU,CAACK,UAAX,KAA0B,CAA1B,IAA+BZ,YAAY,CAACU,UAAD,EAAaH,UAAU,CAACM,UAAxB,CAA3C,IAAkFb,YAAY,CAACU,UAAD,EAAaH,UAAU,CAACO,SAAxB,CAAlG,EAAsI;AACpIP,MAAAA,UAAU,CAACQ,eAAX;AACD;AACF;;AAED,MAAIC,WAAW,GAAGb,MAAM,CAACc,kBAAzB;AACA,MAAIC,gBAAgB,GAAGF,WAAW,CAACP,YAAZ,EAAvB;;AACA,MAAI,CAACS,gBAAgB,CAACC,WAAjB,EAAL,EAAqC;AACnC;AACD;;AAED,MAAIC,SAAS,GAAGF,gBAAgB,CAACG,GAAjB,CAAqB,UAArB,EAAiC,KAAjC,CAAhB;AACAlB,EAAAA,MAAM,CAACmB,KAAP,CAAaC,MAAb,IAAuBpB,MAAM,CAACmB,KAAP,CAAaC,MAAb,CAAoBnB,CAApB,CAAvB;AACAD,EAAAA,MAAM,CAACqB,MAAP,CAAc1B,WAAW,CAAC2B,eAAZ,CAA4BT,WAA5B,EAAyCI,SAAzC,CAAd;AACD;;AAEDM,MAAM,CAACC,OAAP,GAAiBzB,UAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnBlur\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction editOnBlur(editor, e) {\n  // In a contentEditable element, when you select a range and then click\n  // another active element, this does trigger a `blur` event but will not\n  // remove the DOM selection from the contenteditable.\n  // This is consistent across all browsers, but we prefer that the editor\n  // behave like a textarea, where a `blur` event clears the DOM selection.\n  // We therefore force the issue to be certain, checking whether the active\n  // element is `body` to force it when blurring occurs within the window (as\n  // opposed to clicking to another tab or window).\n  if (getActiveElement() === document.body) {\n    var _selection = global.getSelection();\n    var editorNode = editor.refs.editor;\n    if (_selection.rangeCount === 1 && containsNode(editorNode, _selection.anchorNode) && containsNode(editorNode, _selection.focusNode)) {\n      _selection.removeAllRanges();\n    }\n  }\n\n  var editorState = editor._latestEditorState;\n  var currentSelection = editorState.getSelection();\n  if (!currentSelection.getHasFocus()) {\n    return;\n  }\n\n  var selection = currentSelection.set('hasFocus', false);\n  editor.props.onBlur && editor.props.onBlur(e);\n  editor.update(EditorState.acceptSelection(editorState, selection));\n}\n\nmodule.exports = editOnBlur;"]},"metadata":{},"sourceType":"script"}