{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftPasteProcessor\n * @typechecks\n * \n */\n'use strict';\n\nvar CharacterMetadata = require('./CharacterMetadata');\n\nvar ContentBlock = require('./ContentBlock');\n\nvar Immutable = require('immutable');\n\nvar convertFromHTMLtoContentBlocks = require('./convertFromHTMLToContentBlocks');\n\nvar generateRandomKey = require('./generateRandomKey');\n\nvar getSafeBodyFromHTML = require('./getSafeBodyFromHTML');\n\nvar sanitizeDraftText = require('./sanitizeDraftText');\n\nvar List = Immutable.List,\n    Repeat = Immutable.Repeat;\nvar DraftPasteProcessor = {\n  processHTML: function processHTML(html, blockRenderMap) {\n    return convertFromHTMLtoContentBlocks(html, getSafeBodyFromHTML, blockRenderMap);\n  },\n  processText: function processText(textBlocks, character, type) {\n    return textBlocks.map(function (textLine) {\n      textLine = sanitizeDraftText(textLine);\n      return new ContentBlock({\n        key: generateRandomKey(),\n        type: type,\n        text: textLine,\n        characterList: List(Repeat(character, textLine.length))\n      });\n    });\n  }\n};\nmodule.exports = DraftPasteProcessor;","map":{"version":3,"sources":["/Users/zhengjie/Documents/Fulltime/nba_app/node_modules/draft-js/lib/DraftPasteProcessor.js"],"names":["CharacterMetadata","require","ContentBlock","Immutable","convertFromHTMLtoContentBlocks","generateRandomKey","getSafeBodyFromHTML","sanitizeDraftText","List","Repeat","DraftPasteProcessor","processHTML","html","blockRenderMap","processText","textBlocks","character","type","map","textLine","key","text","characterList","length","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAaA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAA/B;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AAEA,IAAIG,8BAA8B,GAAGH,OAAO,CAAC,kCAAD,CAA5C;;AACA,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,qBAAD,CAA/B;;AACA,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIM,iBAAiB,GAAGN,OAAO,CAAC,qBAAD,CAA/B;;AAEA,IAAIO,IAAI,GAAGL,SAAS,CAACK,IAArB;AAAA,IACIC,MAAM,GAAGN,SAAS,CAACM,MADvB;AAIA,IAAIC,mBAAmB,GAAG;AACxBC,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,cAA3B,EAA2C;AACtD,WAAOT,8BAA8B,CAACQ,IAAD,EAAON,mBAAP,EAA4BO,cAA5B,CAArC;AACD,GAHuB;AAIxBC,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBC,UAArB,EAAiCC,SAAjC,EAA4CC,IAA5C,EAAkD;AAC7D,WAAOF,UAAU,CAACG,GAAX,CAAe,UAAUC,QAAV,EAAoB;AACxCA,MAAAA,QAAQ,GAAGZ,iBAAiB,CAACY,QAAD,CAA5B;AACA,aAAO,IAAIjB,YAAJ,CAAiB;AACtBkB,QAAAA,GAAG,EAAEf,iBAAiB,EADA;AAEtBY,QAAAA,IAAI,EAAEA,IAFgB;AAGtBI,QAAAA,IAAI,EAAEF,QAHgB;AAItBG,QAAAA,aAAa,EAAEd,IAAI,CAACC,MAAM,CAACO,SAAD,EAAYG,QAAQ,CAACI,MAArB,CAAP;AAJG,OAAjB,CAAP;AAMD,KARM,CAAP;AASD;AAduB,CAA1B;AAiBAC,MAAM,CAACC,OAAP,GAAiBf,mBAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftPasteProcessor\n * @typechecks\n * \n */\n\n'use strict';\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentBlock = require('./ContentBlock');\nvar Immutable = require('immutable');\n\nvar convertFromHTMLtoContentBlocks = require('./convertFromHTMLToContentBlocks');\nvar generateRandomKey = require('./generateRandomKey');\nvar getSafeBodyFromHTML = require('./getSafeBodyFromHTML');\nvar sanitizeDraftText = require('./sanitizeDraftText');\n\nvar List = Immutable.List,\n    Repeat = Immutable.Repeat;\n\n\nvar DraftPasteProcessor = {\n  processHTML: function processHTML(html, blockRenderMap) {\n    return convertFromHTMLtoContentBlocks(html, getSafeBodyFromHTML, blockRenderMap);\n  },\n  processText: function processText(textBlocks, character, type) {\n    return textBlocks.map(function (textLine) {\n      textLine = sanitizeDraftText(textLine);\n      return new ContentBlock({\n        key: generateRandomKey(),\n        type: type,\n        text: textLine,\n        characterList: List(Repeat(character, textLine.length))\n      });\n    });\n  }\n};\n\nmodule.exports = DraftPasteProcessor;"]},"metadata":{},"sourceType":"script"}