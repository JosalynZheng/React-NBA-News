{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule splitBlockInContentState\n * @typechecks\n * \n */\n'use strict';\n\nvar Immutable = require('immutable');\n\nvar generateRandomKey = require('./generateRandomKey');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar Map = Immutable.Map;\n\nfunction splitBlockInContentState(contentState, selectionState) {\n  !selectionState.isCollapsed() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Selection range must be collapsed.') : invariant(false) : void 0;\n  var key = selectionState.getAnchorKey();\n  var offset = selectionState.getAnchorOffset();\n  var blockMap = contentState.getBlockMap();\n  var blockToSplit = blockMap.get(key);\n  var text = blockToSplit.getText();\n  var chars = blockToSplit.getCharacterList();\n  var blockAbove = blockToSplit.merge({\n    text: text.slice(0, offset),\n    characterList: chars.slice(0, offset)\n  });\n  var keyBelow = generateRandomKey();\n  var blockBelow = blockAbove.merge({\n    key: keyBelow,\n    text: text.slice(offset),\n    characterList: chars.slice(offset),\n    data: Map()\n  });\n  var blocksBefore = blockMap.toSeq().takeUntil(function (v) {\n    return v === blockToSplit;\n  });\n  var blocksAfter = blockMap.toSeq().skipUntil(function (v) {\n    return v === blockToSplit;\n  }).rest();\n  var newBlocks = blocksBefore.concat([[blockAbove.getKey(), blockAbove], [blockBelow.getKey(), blockBelow]], blocksAfter).toOrderedMap();\n  return contentState.merge({\n    blockMap: newBlocks,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState.merge({\n      anchorKey: keyBelow,\n      anchorOffset: 0,\n      focusKey: keyBelow,\n      focusOffset: 0,\n      isBackward: false\n    })\n  });\n}\n\nmodule.exports = splitBlockInContentState;","map":{"version":3,"sources":["/Users/zhengjie/Documents/Fulltime/nba_app/node_modules/draft-js/lib/splitBlockInContentState.js"],"names":["Immutable","require","generateRandomKey","invariant","Map","splitBlockInContentState","contentState","selectionState","isCollapsed","process","env","NODE_ENV","key","getAnchorKey","offset","getAnchorOffset","blockMap","getBlockMap","blockToSplit","get","text","getText","chars","getCharacterList","blockAbove","merge","slice","characterList","keyBelow","blockBelow","data","blocksBefore","toSeq","takeUntil","v","blocksAfter","skipUntil","rest","newBlocks","concat","getKey","toOrderedMap","selectionBefore","selectionAfter","anchorKey","anchorOffset","focusKey","focusOffset","isBackward","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAaA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AAEA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAA/B;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,oBAAD,CAAvB;;AAEA,IAAIG,GAAG,GAAGJ,SAAS,CAACI,GAApB;;AAGA,SAASC,wBAAT,CAAkCC,YAAlC,EAAgDC,cAAhD,EAAgE;AAC9D,GAACA,cAAc,CAACC,WAAf,EAAD,GAAgCC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCR,SAAS,CAAC,KAAD,EAAQ,oCAAR,CAAjD,GAAiGA,SAAS,CAAC,KAAD,CAA1I,GAAoJ,KAAK,CAAzJ;AAEA,MAAIS,GAAG,GAAGL,cAAc,CAACM,YAAf,EAAV;AACA,MAAIC,MAAM,GAAGP,cAAc,CAACQ,eAAf,EAAb;AACA,MAAIC,QAAQ,GAAGV,YAAY,CAACW,WAAb,EAAf;AACA,MAAIC,YAAY,GAAGF,QAAQ,CAACG,GAAT,CAAaP,GAAb,CAAnB;AAEA,MAAIQ,IAAI,GAAGF,YAAY,CAACG,OAAb,EAAX;AACA,MAAIC,KAAK,GAAGJ,YAAY,CAACK,gBAAb,EAAZ;AAEA,MAAIC,UAAU,GAAGN,YAAY,CAACO,KAAb,CAAmB;AAClCL,IAAAA,IAAI,EAAEA,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcZ,MAAd,CAD4B;AAElCa,IAAAA,aAAa,EAAEL,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAeZ,MAAf;AAFmB,GAAnB,CAAjB;AAKA,MAAIc,QAAQ,GAAG1B,iBAAiB,EAAhC;AACA,MAAI2B,UAAU,GAAGL,UAAU,CAACC,KAAX,CAAiB;AAChCb,IAAAA,GAAG,EAAEgB,QAD2B;AAEhCR,IAAAA,IAAI,EAAEA,IAAI,CAACM,KAAL,CAAWZ,MAAX,CAF0B;AAGhCa,IAAAA,aAAa,EAAEL,KAAK,CAACI,KAAN,CAAYZ,MAAZ,CAHiB;AAIhCgB,IAAAA,IAAI,EAAE1B,GAAG;AAJuB,GAAjB,CAAjB;AAOA,MAAI2B,YAAY,GAAGf,QAAQ,CAACgB,KAAT,GAAiBC,SAAjB,CAA2B,UAAUC,CAAV,EAAa;AACzD,WAAOA,CAAC,KAAKhB,YAAb;AACD,GAFkB,CAAnB;AAGA,MAAIiB,WAAW,GAAGnB,QAAQ,CAACgB,KAAT,GAAiBI,SAAjB,CAA2B,UAAUF,CAAV,EAAa;AACxD,WAAOA,CAAC,KAAKhB,YAAb;AACD,GAFiB,EAEfmB,IAFe,EAAlB;AAGA,MAAIC,SAAS,GAAGP,YAAY,CAACQ,MAAb,CAAoB,CAAC,CAACf,UAAU,CAACgB,MAAX,EAAD,EAAsBhB,UAAtB,CAAD,EAAoC,CAACK,UAAU,CAACW,MAAX,EAAD,EAAsBX,UAAtB,CAApC,CAApB,EAA4FM,WAA5F,EAAyGM,YAAzG,EAAhB;AAEA,SAAOnC,YAAY,CAACmB,KAAb,CAAmB;AACxBT,IAAAA,QAAQ,EAAEsB,SADc;AAExBI,IAAAA,eAAe,EAAEnC,cAFO;AAGxBoC,IAAAA,cAAc,EAAEpC,cAAc,CAACkB,KAAf,CAAqB;AACnCmB,MAAAA,SAAS,EAAEhB,QADwB;AAEnCiB,MAAAA,YAAY,EAAE,CAFqB;AAGnCC,MAAAA,QAAQ,EAAElB,QAHyB;AAInCmB,MAAAA,WAAW,EAAE,CAJsB;AAKnCC,MAAAA,UAAU,EAAE;AALuB,KAArB;AAHQ,GAAnB,CAAP;AAWD;;AAEDC,MAAM,CAACC,OAAP,GAAiB7C,wBAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule splitBlockInContentState\n * @typechecks\n * \n */\n\n'use strict';\n\nvar Immutable = require('immutable');\n\nvar generateRandomKey = require('./generateRandomKey');\nvar invariant = require('fbjs/lib/invariant');\n\nvar Map = Immutable.Map;\n\n\nfunction splitBlockInContentState(contentState, selectionState) {\n  !selectionState.isCollapsed() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Selection range must be collapsed.') : invariant(false) : void 0;\n\n  var key = selectionState.getAnchorKey();\n  var offset = selectionState.getAnchorOffset();\n  var blockMap = contentState.getBlockMap();\n  var blockToSplit = blockMap.get(key);\n\n  var text = blockToSplit.getText();\n  var chars = blockToSplit.getCharacterList();\n\n  var blockAbove = blockToSplit.merge({\n    text: text.slice(0, offset),\n    characterList: chars.slice(0, offset)\n  });\n\n  var keyBelow = generateRandomKey();\n  var blockBelow = blockAbove.merge({\n    key: keyBelow,\n    text: text.slice(offset),\n    characterList: chars.slice(offset),\n    data: Map()\n  });\n\n  var blocksBefore = blockMap.toSeq().takeUntil(function (v) {\n    return v === blockToSplit;\n  });\n  var blocksAfter = blockMap.toSeq().skipUntil(function (v) {\n    return v === blockToSplit;\n  }).rest();\n  var newBlocks = blocksBefore.concat([[blockAbove.getKey(), blockAbove], [blockBelow.getKey(), blockBelow]], blocksAfter).toOrderedMap();\n\n  return contentState.merge({\n    blockMap: newBlocks,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState.merge({\n      anchorKey: keyBelow,\n      anchorOffset: 0,\n      focusKey: keyBelow,\n      focusOffset: 0,\n      isBackward: false\n    })\n  });\n}\n\nmodule.exports = splitBlockInContentState;"]},"metadata":{},"sourceType":"script"}