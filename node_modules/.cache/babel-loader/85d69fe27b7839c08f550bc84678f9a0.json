{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule removeRangeFromContentState\n * \n */\n'use strict';\n\nvar Immutable = require('immutable');\n\nfunction removeRangeFromContentState(contentState, selectionState) {\n  if (selectionState.isCollapsed()) {\n    return contentState;\n  }\n\n  var blockMap = contentState.getBlockMap();\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset();\n  var startBlock = blockMap.get(startKey);\n  var endBlock = blockMap.get(endKey);\n  var characterList;\n\n  if (startBlock === endBlock) {\n    characterList = removeFromList(startBlock.getCharacterList(), startOffset, endOffset);\n  } else {\n    characterList = startBlock.getCharacterList().slice(0, startOffset).concat(endBlock.getCharacterList().slice(endOffset));\n  }\n\n  var modifiedStart = startBlock.merge({\n    text: startBlock.getText().slice(0, startOffset) + endBlock.getText().slice(endOffset),\n    characterList: characterList\n  });\n  var newBlocks = blockMap.toSeq().skipUntil(function (_, k) {\n    return k === startKey;\n  }).takeUntil(function (_, k) {\n    return k === endKey;\n  }).concat(Immutable.Map([[endKey, null]])).map(function (_, k) {\n    return k === startKey ? modifiedStart : null;\n  });\n  blockMap = blockMap.merge(newBlocks).filter(function (block) {\n    return !!block;\n  });\n  return contentState.merge({\n    blockMap: blockMap,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState.merge({\n      anchorKey: startKey,\n      anchorOffset: startOffset,\n      focusKey: startKey,\n      focusOffset: startOffset,\n      isBackward: false\n    })\n  });\n}\n/**\n * Maintain persistence for target list when removing characters on the\n * head and tail of the character list.\n */\n\n\nfunction removeFromList(targetList, startOffset, endOffset) {\n  if (startOffset === 0) {\n    while (startOffset < endOffset) {\n      targetList = targetList.shift();\n      startOffset++;\n    }\n  } else if (endOffset === targetList.count()) {\n    while (endOffset > startOffset) {\n      targetList = targetList.pop();\n      endOffset--;\n    }\n  } else {\n    var head = targetList.slice(0, startOffset);\n    var tail = targetList.slice(endOffset);\n    targetList = head.concat(tail).toList();\n  }\n\n  return targetList;\n}\n\nmodule.exports = removeRangeFromContentState;","map":{"version":3,"sources":["/Users/zhengjie/Documents/Fulltime/nba_app/node_modules/draft-js/lib/removeRangeFromContentState.js"],"names":["Immutable","require","removeRangeFromContentState","contentState","selectionState","isCollapsed","blockMap","getBlockMap","startKey","getStartKey","startOffset","getStartOffset","endKey","getEndKey","endOffset","getEndOffset","startBlock","get","endBlock","characterList","removeFromList","getCharacterList","slice","concat","modifiedStart","merge","text","getText","newBlocks","toSeq","skipUntil","_","k","takeUntil","Map","map","filter","block","selectionBefore","selectionAfter","anchorKey","anchorOffset","focusKey","focusOffset","isBackward","targetList","shift","count","pop","head","tail","toList","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule removeRangeFromContentState\n * \n */\n\n'use strict';\n\nvar Immutable = require('immutable');\n\nfunction removeRangeFromContentState(contentState, selectionState) {\n  if (selectionState.isCollapsed()) {\n    return contentState;\n  }\n\n  var blockMap = contentState.getBlockMap();\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset();\n\n  var startBlock = blockMap.get(startKey);\n  var endBlock = blockMap.get(endKey);\n  var characterList;\n\n  if (startBlock === endBlock) {\n    characterList = removeFromList(startBlock.getCharacterList(), startOffset, endOffset);\n  } else {\n    characterList = startBlock.getCharacterList().slice(0, startOffset).concat(endBlock.getCharacterList().slice(endOffset));\n  }\n\n  var modifiedStart = startBlock.merge({\n    text: startBlock.getText().slice(0, startOffset) + endBlock.getText().slice(endOffset),\n    characterList: characterList\n  });\n\n  var newBlocks = blockMap.toSeq().skipUntil(function (_, k) {\n    return k === startKey;\n  }).takeUntil(function (_, k) {\n    return k === endKey;\n  }).concat(Immutable.Map([[endKey, null]])).map(function (_, k) {\n    return k === startKey ? modifiedStart : null;\n  });\n\n  blockMap = blockMap.merge(newBlocks).filter(function (block) {\n    return !!block;\n  });\n\n  return contentState.merge({\n    blockMap: blockMap,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState.merge({\n      anchorKey: startKey,\n      anchorOffset: startOffset,\n      focusKey: startKey,\n      focusOffset: startOffset,\n      isBackward: false\n    })\n  });\n}\n\n/**\n * Maintain persistence for target list when removing characters on the\n * head and tail of the character list.\n */\nfunction removeFromList(targetList, startOffset, endOffset) {\n  if (startOffset === 0) {\n    while (startOffset < endOffset) {\n      targetList = targetList.shift();\n      startOffset++;\n    }\n  } else if (endOffset === targetList.count()) {\n    while (endOffset > startOffset) {\n      targetList = targetList.pop();\n      endOffset--;\n    }\n  } else {\n    var head = targetList.slice(0, startOffset);\n    var tail = targetList.slice(endOffset);\n    targetList = head.concat(tail).toList();\n  }\n  return targetList;\n}\n\nmodule.exports = removeRangeFromContentState;"]},"metadata":{},"sourceType":"script"}