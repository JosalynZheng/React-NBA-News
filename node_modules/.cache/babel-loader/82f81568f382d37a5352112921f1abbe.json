{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftEditor.react\n * @typechecks\n * \n * @preventMunge\n */\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar _extends = _assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DefaultDraftBlockRenderMap = require('./DefaultDraftBlockRenderMap');\n\nvar DefaultDraftInlineStyle = require('./DefaultDraftInlineStyle');\n\nvar DraftEditorCompositionHandler = require('./DraftEditorCompositionHandler');\n\nvar DraftEditorContents = require('./DraftEditorContents.react');\n\nvar DraftEditorDragHandler = require('./DraftEditorDragHandler');\n\nvar DraftEditorEditHandler = require('./DraftEditorEditHandler');\n\nvar DraftEditorPlaceholder = require('./DraftEditorPlaceholder.react');\n\nvar EditorState = require('./EditorState');\n\nvar React = require('react');\n\nvar ReactDOM = require('react-dom');\n\nvar Scroll = require('fbjs/lib/Scroll');\n\nvar Style = require('fbjs/lib/Style');\n\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nvar cx = require('fbjs/lib/cx');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar generateRandomKey = require('./generateRandomKey');\n\nvar getDefaultKeyBinding = require('./getDefaultKeyBinding');\n\nvar getScrollPosition = require('fbjs/lib/getScrollPosition');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar isIE = UserAgent.isBrowser('IE'); // IE does not support the `input` event on contentEditable, so we can't\n// observe spellcheck behavior.\n\nvar allowSpellCheck = !isIE; // Define a set of handler objects to correspond to each possible `mode`\n// of editor behavior.\n\nvar handlerMap = {\n  'edit': DraftEditorEditHandler,\n  'composite': DraftEditorCompositionHandler,\n  'drag': DraftEditorDragHandler,\n  'cut': null,\n  'render': null\n};\n/**\n * `DraftEditor` is the root editor component. It composes a `contentEditable`\n * div, and provides a wide variety of useful function props for managing the\n * state of the editor. See `DraftEditorProps` for details.\n */\n\nvar DraftEditor = function (_React$Component) {\n  _inherits(DraftEditor, _React$Component);\n\n  function DraftEditor(props) {\n    _classCallCheck(this, DraftEditor);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this._blockSelectEvents = false;\n    _this._clipboard = null;\n    _this._handler = null;\n    _this._dragCount = 0;\n    _this._editorKey = props.editorKey || generateRandomKey();\n    _this._placeholderAccessibilityID = 'placeholder-' + _this._editorKey;\n    _this._latestEditorState = props.editorState;\n    _this._latestCommittedEditorState = props.editorState;\n    _this._onBeforeInput = _this._buildHandler('onBeforeInput');\n    _this._onBlur = _this._buildHandler('onBlur');\n    _this._onCharacterData = _this._buildHandler('onCharacterData');\n    _this._onCompositionEnd = _this._buildHandler('onCompositionEnd');\n    _this._onCompositionStart = _this._buildHandler('onCompositionStart');\n    _this._onCopy = _this._buildHandler('onCopy');\n    _this._onCut = _this._buildHandler('onCut');\n    _this._onDragEnd = _this._buildHandler('onDragEnd');\n    _this._onDragOver = _this._buildHandler('onDragOver');\n    _this._onDragStart = _this._buildHandler('onDragStart');\n    _this._onDrop = _this._buildHandler('onDrop');\n    _this._onInput = _this._buildHandler('onInput');\n    _this._onFocus = _this._buildHandler('onFocus');\n    _this._onKeyDown = _this._buildHandler('onKeyDown');\n    _this._onKeyPress = _this._buildHandler('onKeyPress');\n    _this._onKeyUp = _this._buildHandler('onKeyUp');\n    _this._onMouseDown = _this._buildHandler('onMouseDown');\n    _this._onMouseUp = _this._buildHandler('onMouseUp');\n    _this._onPaste = _this._buildHandler('onPaste');\n    _this._onSelect = _this._buildHandler('onSelect'); // Manual binding for public and internal methods.\n\n    _this.focus = _this._focus.bind(_this);\n    _this.blur = _this._blur.bind(_this);\n    _this.setMode = _this._setMode.bind(_this);\n    _this.exitCurrentMode = _this._exitCurrentMode.bind(_this);\n    _this.restoreEditorDOM = _this._restoreEditorDOM.bind(_this);\n    _this.setClipboard = _this._setClipboard.bind(_this);\n    _this.getClipboard = _this._getClipboard.bind(_this);\n\n    _this.getEditorKey = function () {\n      return _this._editorKey;\n    };\n\n    _this.update = _this._update.bind(_this);\n    _this.onDragEnter = _this._onDragEnter.bind(_this);\n    _this.onDragLeave = _this._onDragLeave.bind(_this); // See `_restoreEditorDOM()`.\n\n    _this.state = {\n      contentsKey: 0\n    };\n    return _this;\n  }\n  /**\n   * Build a method that will pass the event to the specified handler method.\n   * This allows us to look up the correct handler function for the current\n   * editor mode, if any has been specified.\n   */\n\n  /**\n   * Define proxies that can route events to the current handler.\n   */\n\n\n  DraftEditor.prototype._buildHandler = function _buildHandler(eventName) {\n    var _this2 = this;\n\n    return function (e) {\n      if (!_this2.props.readOnly) {\n        var method = _this2._handler && _this2._handler[eventName];\n        method && method(_this2, e);\n      }\n    };\n  };\n\n  DraftEditor.prototype._showPlaceholder = function _showPlaceholder() {\n    return !!this.props.placeholder && !this.props.editorState.isInCompositionMode() && !this.props.editorState.getCurrentContent().hasText();\n  };\n\n  DraftEditor.prototype._renderPlaceholder = function _renderPlaceholder() {\n    if (this._showPlaceholder()) {\n      return (\n        /* $FlowFixMe(>=0.53.0 site=www,mobile) This comment suppresses an\n         * error when upgrading Flow's support for React. Common errors found\n         * when upgrading Flow's React support are documented at\n         * https://fburl.com/eq7bs81w */\n        React.createElement(DraftEditorPlaceholder, {\n          text: nullthrows(this.props.placeholder),\n          editorState: this.props.editorState,\n          textAlignment: this.props.textAlignment,\n          accessibilityID: this._placeholderAccessibilityID\n        })\n      );\n    }\n\n    return null;\n  };\n\n  DraftEditor.prototype.render = function render() {\n    var _props = this.props,\n        readOnly = _props.readOnly,\n        textAlignment = _props.textAlignment;\n    var rootClass = cx({\n      'DraftEditor/root': true,\n      'DraftEditor/alignLeft': textAlignment === 'left',\n      'DraftEditor/alignRight': textAlignment === 'right',\n      'DraftEditor/alignCenter': textAlignment === 'center'\n    });\n    var contentStyle = {\n      outline: 'none',\n      // fix parent-draggable Safari bug. #1326\n      userSelect: 'text',\n      WebkitUserSelect: 'text',\n      whiteSpace: 'pre-wrap',\n      wordWrap: 'break-word'\n    }; // The aria-expanded and aria-haspopup properties should only be rendered\n    // for a combobox.\n\n    var ariaRole = this.props.role || 'textbox';\n    var ariaExpanded = ariaRole === 'combobox' ? !!this.props.ariaExpanded : null;\n    return React.createElement('div', {\n      className: rootClass\n    }, this._renderPlaceholder(), React.createElement('div', {\n      className: cx('DraftEditor/editorContainer'),\n      ref: 'editorContainer'\n    }, React.createElement('div', {\n      'aria-activedescendant': readOnly ? null : this.props.ariaActiveDescendantID,\n      'aria-autocomplete': readOnly ? null : this.props.ariaAutoComplete,\n      'aria-controls': readOnly ? null : this.props.ariaControls,\n      'aria-describedby': this._showPlaceholder() ? this._placeholderAccessibilityID : null,\n      'aria-expanded': readOnly ? null : ariaExpanded,\n      'aria-label': this.props.ariaLabel,\n      'aria-multiline': this.props.ariaMultiline,\n      autoCapitalize: this.props.autoCapitalize,\n      autoComplete: this.props.autoComplete,\n      autoCorrect: this.props.autoCorrect,\n      className: cx({\n        // Chrome's built-in translation feature mutates the DOM in ways\n        // that Draft doesn't expect (ex: adding <font> tags inside\n        // DraftEditorLeaf spans) and causes problems. We add notranslate\n        // here which makes its autotranslation skip over this subtree.\n        'notranslate': !readOnly,\n        'public/DraftEditor/content': true\n      }),\n      contentEditable: !readOnly,\n      'data-testid': this.props.webDriverTestID,\n      onBeforeInput: this._onBeforeInput,\n      onBlur: this._onBlur,\n      onCompositionEnd: this._onCompositionEnd,\n      onCompositionStart: this._onCompositionStart,\n      onCopy: this._onCopy,\n      onCut: this._onCut,\n      onDragEnd: this._onDragEnd,\n      onDragEnter: this.onDragEnter,\n      onDragLeave: this.onDragLeave,\n      onDragOver: this._onDragOver,\n      onDragStart: this._onDragStart,\n      onDrop: this._onDrop,\n      onFocus: this._onFocus,\n      onInput: this._onInput,\n      onKeyDown: this._onKeyDown,\n      onKeyPress: this._onKeyPress,\n      onKeyUp: this._onKeyUp,\n      onMouseUp: this._onMouseUp,\n      onPaste: this._onPaste,\n      onSelect: this._onSelect,\n      ref: 'editor',\n      role: readOnly ? null : ariaRole,\n      spellCheck: allowSpellCheck && this.props.spellCheck,\n      style: contentStyle,\n      suppressContentEditableWarning: true,\n      tabIndex: this.props.tabIndex\n    }, React.createElement(DraftEditorContents, {\n      blockRenderMap: this.props.blockRenderMap,\n      blockRendererFn: this.props.blockRendererFn,\n      blockStyleFn: this.props.blockStyleFn,\n      customStyleMap: _extends({}, DefaultDraftInlineStyle, this.props.customStyleMap),\n      customStyleFn: this.props.customStyleFn,\n      editorKey: this._editorKey,\n      editorState: this.props.editorState,\n      key: 'contents' + this.state.contentsKey,\n      textDirectionality: this.props.textDirectionality\n    }))));\n  };\n\n  DraftEditor.prototype.componentDidMount = function componentDidMount() {\n    this.setMode('edit');\n    /**\n     * IE has a hardcoded \"feature\" that attempts to convert link text into\n     * anchors in contentEditable DOM. This breaks the editor's expectations of\n     * the DOM, and control is lost. Disable it to make IE behave.\n     * See: http://blogs.msdn.com/b/ieinternals/archive/2010/09/15/\n     * ie9-beta-minor-change-list.aspx\n     */\n\n    if (isIE) {\n      document.execCommand('AutoUrlDetect', false, false);\n    }\n  };\n  /**\n   * Prevent selection events from affecting the current editor state. This\n   * is mostly intended to defend against IE, which fires off `selectionchange`\n   * events regardless of whether the selection is set via the browser or\n   * programmatically. We only care about selection events that occur because\n   * of browser interaction, not re-renders and forced selections.\n   */\n\n\n  DraftEditor.prototype.componentWillUpdate = function componentWillUpdate(nextProps) {\n    this._blockSelectEvents = true;\n    this._latestEditorState = nextProps.editorState;\n  };\n\n  DraftEditor.prototype.componentDidUpdate = function componentDidUpdate() {\n    this._blockSelectEvents = false;\n    this._latestCommittedEditorState = this.props.editorState;\n  };\n  /**\n   * Used via `this.focus()`.\n   *\n   * Force focus back onto the editor node.\n   *\n   * We attempt to preserve scroll position when focusing. You can also pass\n   * a specified scroll position (for cases like `cut` behavior where it should\n   * be restored to a known position).\n   */\n\n\n  DraftEditor.prototype._focus = function _focus(scrollPosition) {\n    var editorState = this.props.editorState;\n    var alreadyHasFocus = editorState.getSelection().getHasFocus();\n    var editorNode = ReactDOM.findDOMNode(this.refs.editor);\n\n    if (!editorNode) {\n      // once in a while people call 'focus' in a setTimeout, and the node has\n      // been deleted, so it can be null in that case.\n      return;\n    }\n\n    var scrollParent = Style.getScrollParent(editorNode);\n\n    var _ref = scrollPosition || getScrollPosition(scrollParent),\n        x = _ref.x,\n        y = _ref.y;\n\n    !(editorNode instanceof HTMLElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'editorNode is not an HTMLElement') : invariant(false) : void 0;\n    editorNode.focus(); // Restore scroll position\n\n    if (scrollParent === window) {\n      window.scrollTo(x, y);\n    } else {\n      Scroll.setTop(scrollParent, y);\n    } // On Chrome and Safari, calling focus on contenteditable focuses the\n    // cursor at the first character. This is something you don't expect when\n    // you're clicking on an input element but not directly on a character.\n    // Put the cursor back where it was before the blur.\n\n\n    if (!alreadyHasFocus) {\n      this.update(EditorState.forceSelection(editorState, editorState.getSelection()));\n    }\n  };\n\n  DraftEditor.prototype._blur = function _blur() {\n    var editorNode = ReactDOM.findDOMNode(this.refs.editor);\n    !(editorNode instanceof HTMLElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'editorNode is not an HTMLElement') : invariant(false) : void 0;\n    editorNode.blur();\n  };\n  /**\n   * Used via `this.setMode(...)`.\n   *\n   * Set the behavior mode for the editor component. This switches the current\n   * handler module to ensure that DOM events are managed appropriately for\n   * the active mode.\n   */\n\n\n  DraftEditor.prototype._setMode = function _setMode(mode) {\n    this._handler = handlerMap[mode];\n  };\n\n  DraftEditor.prototype._exitCurrentMode = function _exitCurrentMode() {\n    this.setMode('edit');\n  };\n  /**\n   * Used via `this.restoreEditorDOM()`.\n   *\n   * Force a complete re-render of the DraftEditorContents based on the current\n   * EditorState. This is useful when we know we are going to lose control of\n   * the DOM state (cut command, IME) and we want to make sure that\n   * reconciliation occurs on a version of the DOM that is synchronized with\n   * our EditorState.\n   */\n\n\n  DraftEditor.prototype._restoreEditorDOM = function _restoreEditorDOM(scrollPosition) {\n    var _this3 = this;\n\n    this.setState({\n      contentsKey: this.state.contentsKey + 1\n    }, function () {\n      _this3._focus(scrollPosition);\n    });\n  };\n  /**\n   * Used via `this.setClipboard(...)`.\n   *\n   * Set the clipboard state for a cut/copy event.\n   */\n\n\n  DraftEditor.prototype._setClipboard = function _setClipboard(clipboard) {\n    this._clipboard = clipboard;\n  };\n  /**\n   * Used via `this.getClipboard()`.\n   *\n   * Retrieve the clipboard state for a cut/copy event.\n   */\n\n\n  DraftEditor.prototype._getClipboard = function _getClipboard() {\n    return this._clipboard;\n  };\n  /**\n   * Used via `this.update(...)`.\n   *\n   * Propagate a new `EditorState` object to higher-level components. This is\n   * the method by which event handlers inform the `DraftEditor` component of\n   * state changes. A component that composes a `DraftEditor` **must** provide\n   * an `onChange` prop to receive state updates passed along from this\n   * function.\n   */\n\n\n  DraftEditor.prototype._update = function _update(editorState) {\n    this._latestEditorState = editorState;\n    this.props.onChange(editorState);\n  };\n  /**\n   * Used in conjunction with `_onDragLeave()`, by counting the number of times\n   * a dragged element enters and leaves the editor (or any of its children),\n   * to determine when the dragged element absolutely leaves the editor.\n   */\n\n\n  DraftEditor.prototype._onDragEnter = function _onDragEnter() {\n    this._dragCount++;\n  };\n  /**\n   * See `_onDragEnter()`.\n   */\n\n\n  DraftEditor.prototype._onDragLeave = function _onDragLeave() {\n    this._dragCount--;\n\n    if (this._dragCount === 0) {\n      this.exitCurrentMode();\n    }\n  };\n\n  return DraftEditor;\n}(React.Component);\n\nDraftEditor.defaultProps = {\n  blockRenderMap: DefaultDraftBlockRenderMap,\n  blockRendererFn: emptyFunction.thatReturnsNull,\n  blockStyleFn: emptyFunction.thatReturns(''),\n  keyBindingFn: getDefaultKeyBinding,\n  readOnly: false,\n  spellCheck: false,\n  stripPastedStyles: false\n};\nmodule.exports = DraftEditor;","map":{"version":3,"sources":["/Users/zhengjie/Documents/Fulltime/nba_app/node_modules/draft-js/lib/DraftEditor.react.js"],"names":["_assign","require","_extends","target","i","arguments","length","source","key","Object","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","DefaultDraftBlockRenderMap","DefaultDraftInlineStyle","DraftEditorCompositionHandler","DraftEditorContents","DraftEditorDragHandler","DraftEditorEditHandler","DraftEditorPlaceholder","EditorState","React","ReactDOM","Scroll","Style","UserAgent","cx","emptyFunction","generateRandomKey","getDefaultKeyBinding","getScrollPosition","invariant","nullthrows","isIE","isBrowser","allowSpellCheck","handlerMap","DraftEditor","_React$Component","props","_this","_blockSelectEvents","_clipboard","_handler","_dragCount","_editorKey","editorKey","_placeholderAccessibilityID","_latestEditorState","editorState","_latestCommittedEditorState","_onBeforeInput","_buildHandler","_onBlur","_onCharacterData","_onCompositionEnd","_onCompositionStart","_onCopy","_onCut","_onDragEnd","_onDragOver","_onDragStart","_onDrop","_onInput","_onFocus","_onKeyDown","_onKeyPress","_onKeyUp","_onMouseDown","_onMouseUp","_onPaste","_onSelect","focus","_focus","bind","blur","_blur","setMode","_setMode","exitCurrentMode","_exitCurrentMode","restoreEditorDOM","_restoreEditorDOM","setClipboard","_setClipboard","getClipboard","_getClipboard","getEditorKey","update","_update","onDragEnter","_onDragEnter","onDragLeave","_onDragLeave","state","contentsKey","eventName","_this2","e","readOnly","method","_showPlaceholder","placeholder","isInCompositionMode","getCurrentContent","hasText","_renderPlaceholder","createElement","text","textAlignment","accessibilityID","render","_props","rootClass","contentStyle","outline","userSelect","WebkitUserSelect","whiteSpace","wordWrap","ariaRole","role","ariaExpanded","className","ref","ariaActiveDescendantID","ariaAutoComplete","ariaControls","ariaLabel","ariaMultiline","autoCapitalize","autoComplete","autoCorrect","contentEditable","webDriverTestID","onBeforeInput","onBlur","onCompositionEnd","onCompositionStart","onCopy","onCut","onDragEnd","onDragOver","onDragStart","onDrop","onFocus","onInput","onKeyDown","onKeyPress","onKeyUp","onMouseUp","onPaste","onSelect","spellCheck","style","suppressContentEditableWarning","tabIndex","blockRenderMap","blockRendererFn","blockStyleFn","customStyleMap","customStyleFn","textDirectionality","componentDidMount","document","execCommand","componentWillUpdate","nextProps","componentDidUpdate","scrollPosition","alreadyHasFocus","getSelection","getHasFocus","editorNode","findDOMNode","refs","editor","scrollParent","getScrollParent","_ref","x","y","HTMLElement","process","env","NODE_ENV","window","scrollTo","setTop","forceSelection","mode","_this3","setState","clipboard","onChange","Component","defaultProps","thatReturnsNull","thatReturns","keyBindingFn","stripPastedStyles","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftEditor.react\n * @typechecks\n * \n * @preventMunge\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DefaultDraftBlockRenderMap = require('./DefaultDraftBlockRenderMap');\nvar DefaultDraftInlineStyle = require('./DefaultDraftInlineStyle');\nvar DraftEditorCompositionHandler = require('./DraftEditorCompositionHandler');\nvar DraftEditorContents = require('./DraftEditorContents.react');\nvar DraftEditorDragHandler = require('./DraftEditorDragHandler');\nvar DraftEditorEditHandler = require('./DraftEditorEditHandler');\nvar DraftEditorPlaceholder = require('./DraftEditorPlaceholder.react');\nvar EditorState = require('./EditorState');\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar Scroll = require('fbjs/lib/Scroll');\nvar Style = require('fbjs/lib/Style');\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nvar cx = require('fbjs/lib/cx');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar generateRandomKey = require('./generateRandomKey');\nvar getDefaultKeyBinding = require('./getDefaultKeyBinding');\nvar getScrollPosition = require('fbjs/lib/getScrollPosition');\nvar invariant = require('fbjs/lib/invariant');\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar isIE = UserAgent.isBrowser('IE');\n\n// IE does not support the `input` event on contentEditable, so we can't\n// observe spellcheck behavior.\nvar allowSpellCheck = !isIE;\n\n// Define a set of handler objects to correspond to each possible `mode`\n// of editor behavior.\nvar handlerMap = {\n  'edit': DraftEditorEditHandler,\n  'composite': DraftEditorCompositionHandler,\n  'drag': DraftEditorDragHandler,\n  'cut': null,\n  'render': null\n};\n\n/**\n * `DraftEditor` is the root editor component. It composes a `contentEditable`\n * div, and provides a wide variety of useful function props for managing the\n * state of the editor. See `DraftEditorProps` for details.\n */\nvar DraftEditor = function (_React$Component) {\n  _inherits(DraftEditor, _React$Component);\n\n  function DraftEditor(props) {\n    _classCallCheck(this, DraftEditor);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this._blockSelectEvents = false;\n    _this._clipboard = null;\n    _this._handler = null;\n    _this._dragCount = 0;\n    _this._editorKey = props.editorKey || generateRandomKey();\n    _this._placeholderAccessibilityID = 'placeholder-' + _this._editorKey;\n    _this._latestEditorState = props.editorState;\n    _this._latestCommittedEditorState = props.editorState;\n\n    _this._onBeforeInput = _this._buildHandler('onBeforeInput');\n    _this._onBlur = _this._buildHandler('onBlur');\n    _this._onCharacterData = _this._buildHandler('onCharacterData');\n    _this._onCompositionEnd = _this._buildHandler('onCompositionEnd');\n    _this._onCompositionStart = _this._buildHandler('onCompositionStart');\n    _this._onCopy = _this._buildHandler('onCopy');\n    _this._onCut = _this._buildHandler('onCut');\n    _this._onDragEnd = _this._buildHandler('onDragEnd');\n    _this._onDragOver = _this._buildHandler('onDragOver');\n    _this._onDragStart = _this._buildHandler('onDragStart');\n    _this._onDrop = _this._buildHandler('onDrop');\n    _this._onInput = _this._buildHandler('onInput');\n    _this._onFocus = _this._buildHandler('onFocus');\n    _this._onKeyDown = _this._buildHandler('onKeyDown');\n    _this._onKeyPress = _this._buildHandler('onKeyPress');\n    _this._onKeyUp = _this._buildHandler('onKeyUp');\n    _this._onMouseDown = _this._buildHandler('onMouseDown');\n    _this._onMouseUp = _this._buildHandler('onMouseUp');\n    _this._onPaste = _this._buildHandler('onPaste');\n    _this._onSelect = _this._buildHandler('onSelect');\n\n    // Manual binding for public and internal methods.\n    _this.focus = _this._focus.bind(_this);\n    _this.blur = _this._blur.bind(_this);\n    _this.setMode = _this._setMode.bind(_this);\n    _this.exitCurrentMode = _this._exitCurrentMode.bind(_this);\n    _this.restoreEditorDOM = _this._restoreEditorDOM.bind(_this);\n    _this.setClipboard = _this._setClipboard.bind(_this);\n    _this.getClipboard = _this._getClipboard.bind(_this);\n    _this.getEditorKey = function () {\n      return _this._editorKey;\n    };\n    _this.update = _this._update.bind(_this);\n    _this.onDragEnter = _this._onDragEnter.bind(_this);\n    _this.onDragLeave = _this._onDragLeave.bind(_this);\n\n    // See `_restoreEditorDOM()`.\n    _this.state = { contentsKey: 0 };\n    return _this;\n  }\n\n  /**\n   * Build a method that will pass the event to the specified handler method.\n   * This allows us to look up the correct handler function for the current\n   * editor mode, if any has been specified.\n   */\n\n\n  /**\n   * Define proxies that can route events to the current handler.\n   */\n\n\n  DraftEditor.prototype._buildHandler = function _buildHandler(eventName) {\n    var _this2 = this;\n\n    return function (e) {\n      if (!_this2.props.readOnly) {\n        var method = _this2._handler && _this2._handler[eventName];\n        method && method(_this2, e);\n      }\n    };\n  };\n\n  DraftEditor.prototype._showPlaceholder = function _showPlaceholder() {\n    return !!this.props.placeholder && !this.props.editorState.isInCompositionMode() && !this.props.editorState.getCurrentContent().hasText();\n  };\n\n  DraftEditor.prototype._renderPlaceholder = function _renderPlaceholder() {\n    if (this._showPlaceholder()) {\n      return (\n        /* $FlowFixMe(>=0.53.0 site=www,mobile) This comment suppresses an\n         * error when upgrading Flow's support for React. Common errors found\n         * when upgrading Flow's React support are documented at\n         * https://fburl.com/eq7bs81w */\n        React.createElement(DraftEditorPlaceholder, {\n          text: nullthrows(this.props.placeholder),\n          editorState: this.props.editorState,\n          textAlignment: this.props.textAlignment,\n          accessibilityID: this._placeholderAccessibilityID\n        })\n      );\n    }\n    return null;\n  };\n\n  DraftEditor.prototype.render = function render() {\n    var _props = this.props,\n        readOnly = _props.readOnly,\n        textAlignment = _props.textAlignment;\n\n    var rootClass = cx({\n      'DraftEditor/root': true,\n      'DraftEditor/alignLeft': textAlignment === 'left',\n      'DraftEditor/alignRight': textAlignment === 'right',\n      'DraftEditor/alignCenter': textAlignment === 'center'\n    });\n\n    var contentStyle = {\n      outline: 'none',\n      // fix parent-draggable Safari bug. #1326\n      userSelect: 'text',\n      WebkitUserSelect: 'text',\n      whiteSpace: 'pre-wrap',\n      wordWrap: 'break-word'\n    };\n\n    // The aria-expanded and aria-haspopup properties should only be rendered\n    // for a combobox.\n    var ariaRole = this.props.role || 'textbox';\n    var ariaExpanded = ariaRole === 'combobox' ? !!this.props.ariaExpanded : null;\n\n    return React.createElement(\n      'div',\n      { className: rootClass },\n      this._renderPlaceholder(),\n      React.createElement(\n        'div',\n        {\n          className: cx('DraftEditor/editorContainer'),\n          ref: 'editorContainer' },\n        React.createElement(\n          'div',\n          {\n            'aria-activedescendant': readOnly ? null : this.props.ariaActiveDescendantID,\n            'aria-autocomplete': readOnly ? null : this.props.ariaAutoComplete,\n            'aria-controls': readOnly ? null : this.props.ariaControls,\n            'aria-describedby': this._showPlaceholder() ? this._placeholderAccessibilityID : null,\n            'aria-expanded': readOnly ? null : ariaExpanded,\n            'aria-label': this.props.ariaLabel,\n            'aria-multiline': this.props.ariaMultiline,\n            autoCapitalize: this.props.autoCapitalize,\n            autoComplete: this.props.autoComplete,\n            autoCorrect: this.props.autoCorrect,\n            className: cx({\n              // Chrome's built-in translation feature mutates the DOM in ways\n              // that Draft doesn't expect (ex: adding <font> tags inside\n              // DraftEditorLeaf spans) and causes problems. We add notranslate\n              // here which makes its autotranslation skip over this subtree.\n              'notranslate': !readOnly,\n              'public/DraftEditor/content': true\n            }),\n            contentEditable: !readOnly,\n            'data-testid': this.props.webDriverTestID,\n            onBeforeInput: this._onBeforeInput,\n            onBlur: this._onBlur,\n            onCompositionEnd: this._onCompositionEnd,\n            onCompositionStart: this._onCompositionStart,\n            onCopy: this._onCopy,\n            onCut: this._onCut,\n            onDragEnd: this._onDragEnd,\n            onDragEnter: this.onDragEnter,\n            onDragLeave: this.onDragLeave,\n            onDragOver: this._onDragOver,\n            onDragStart: this._onDragStart,\n            onDrop: this._onDrop,\n            onFocus: this._onFocus,\n            onInput: this._onInput,\n            onKeyDown: this._onKeyDown,\n            onKeyPress: this._onKeyPress,\n            onKeyUp: this._onKeyUp,\n            onMouseUp: this._onMouseUp,\n            onPaste: this._onPaste,\n            onSelect: this._onSelect,\n            ref: 'editor',\n            role: readOnly ? null : ariaRole,\n            spellCheck: allowSpellCheck && this.props.spellCheck,\n            style: contentStyle,\n            suppressContentEditableWarning: true,\n            tabIndex: this.props.tabIndex },\n          React.createElement(DraftEditorContents, {\n            blockRenderMap: this.props.blockRenderMap,\n            blockRendererFn: this.props.blockRendererFn,\n            blockStyleFn: this.props.blockStyleFn,\n            customStyleMap: _extends({}, DefaultDraftInlineStyle, this.props.customStyleMap),\n            customStyleFn: this.props.customStyleFn,\n            editorKey: this._editorKey,\n            editorState: this.props.editorState,\n            key: 'contents' + this.state.contentsKey,\n            textDirectionality: this.props.textDirectionality\n          })\n        )\n      )\n    );\n  };\n\n  DraftEditor.prototype.componentDidMount = function componentDidMount() {\n    this.setMode('edit');\n\n    /**\n     * IE has a hardcoded \"feature\" that attempts to convert link text into\n     * anchors in contentEditable DOM. This breaks the editor's expectations of\n     * the DOM, and control is lost. Disable it to make IE behave.\n     * See: http://blogs.msdn.com/b/ieinternals/archive/2010/09/15/\n     * ie9-beta-minor-change-list.aspx\n     */\n    if (isIE) {\n      document.execCommand('AutoUrlDetect', false, false);\n    }\n  };\n\n  /**\n   * Prevent selection events from affecting the current editor state. This\n   * is mostly intended to defend against IE, which fires off `selectionchange`\n   * events regardless of whether the selection is set via the browser or\n   * programmatically. We only care about selection events that occur because\n   * of browser interaction, not re-renders and forced selections.\n   */\n\n\n  DraftEditor.prototype.componentWillUpdate = function componentWillUpdate(nextProps) {\n    this._blockSelectEvents = true;\n    this._latestEditorState = nextProps.editorState;\n  };\n\n  DraftEditor.prototype.componentDidUpdate = function componentDidUpdate() {\n    this._blockSelectEvents = false;\n    this._latestCommittedEditorState = this.props.editorState;\n  };\n\n  /**\n   * Used via `this.focus()`.\n   *\n   * Force focus back onto the editor node.\n   *\n   * We attempt to preserve scroll position when focusing. You can also pass\n   * a specified scroll position (for cases like `cut` behavior where it should\n   * be restored to a known position).\n   */\n\n\n  DraftEditor.prototype._focus = function _focus(scrollPosition) {\n    var editorState = this.props.editorState;\n\n    var alreadyHasFocus = editorState.getSelection().getHasFocus();\n    var editorNode = ReactDOM.findDOMNode(this.refs.editor);\n\n    if (!editorNode) {\n      // once in a while people call 'focus' in a setTimeout, and the node has\n      // been deleted, so it can be null in that case.\n      return;\n    }\n\n    var scrollParent = Style.getScrollParent(editorNode);\n\n    var _ref = scrollPosition || getScrollPosition(scrollParent),\n        x = _ref.x,\n        y = _ref.y;\n\n    !(editorNode instanceof HTMLElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'editorNode is not an HTMLElement') : invariant(false) : void 0;\n    editorNode.focus();\n\n    // Restore scroll position\n    if (scrollParent === window) {\n      window.scrollTo(x, y);\n    } else {\n      Scroll.setTop(scrollParent, y);\n    }\n\n    // On Chrome and Safari, calling focus on contenteditable focuses the\n    // cursor at the first character. This is something you don't expect when\n    // you're clicking on an input element but not directly on a character.\n    // Put the cursor back where it was before the blur.\n    if (!alreadyHasFocus) {\n      this.update(EditorState.forceSelection(editorState, editorState.getSelection()));\n    }\n  };\n\n  DraftEditor.prototype._blur = function _blur() {\n    var editorNode = ReactDOM.findDOMNode(this.refs.editor);\n    !(editorNode instanceof HTMLElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'editorNode is not an HTMLElement') : invariant(false) : void 0;\n    editorNode.blur();\n  };\n\n  /**\n   * Used via `this.setMode(...)`.\n   *\n   * Set the behavior mode for the editor component. This switches the current\n   * handler module to ensure that DOM events are managed appropriately for\n   * the active mode.\n   */\n\n\n  DraftEditor.prototype._setMode = function _setMode(mode) {\n    this._handler = handlerMap[mode];\n  };\n\n  DraftEditor.prototype._exitCurrentMode = function _exitCurrentMode() {\n    this.setMode('edit');\n  };\n\n  /**\n   * Used via `this.restoreEditorDOM()`.\n   *\n   * Force a complete re-render of the DraftEditorContents based on the current\n   * EditorState. This is useful when we know we are going to lose control of\n   * the DOM state (cut command, IME) and we want to make sure that\n   * reconciliation occurs on a version of the DOM that is synchronized with\n   * our EditorState.\n   */\n\n\n  DraftEditor.prototype._restoreEditorDOM = function _restoreEditorDOM(scrollPosition) {\n    var _this3 = this;\n\n    this.setState({ contentsKey: this.state.contentsKey + 1 }, function () {\n      _this3._focus(scrollPosition);\n    });\n  };\n\n  /**\n   * Used via `this.setClipboard(...)`.\n   *\n   * Set the clipboard state for a cut/copy event.\n   */\n\n\n  DraftEditor.prototype._setClipboard = function _setClipboard(clipboard) {\n    this._clipboard = clipboard;\n  };\n\n  /**\n   * Used via `this.getClipboard()`.\n   *\n   * Retrieve the clipboard state for a cut/copy event.\n   */\n\n\n  DraftEditor.prototype._getClipboard = function _getClipboard() {\n    return this._clipboard;\n  };\n\n  /**\n   * Used via `this.update(...)`.\n   *\n   * Propagate a new `EditorState` object to higher-level components. This is\n   * the method by which event handlers inform the `DraftEditor` component of\n   * state changes. A component that composes a `DraftEditor` **must** provide\n   * an `onChange` prop to receive state updates passed along from this\n   * function.\n   */\n\n\n  DraftEditor.prototype._update = function _update(editorState) {\n    this._latestEditorState = editorState;\n    this.props.onChange(editorState);\n  };\n\n  /**\n   * Used in conjunction with `_onDragLeave()`, by counting the number of times\n   * a dragged element enters and leaves the editor (or any of its children),\n   * to determine when the dragged element absolutely leaves the editor.\n   */\n\n\n  DraftEditor.prototype._onDragEnter = function _onDragEnter() {\n    this._dragCount++;\n  };\n\n  /**\n   * See `_onDragEnter()`.\n   */\n\n\n  DraftEditor.prototype._onDragLeave = function _onDragLeave() {\n    this._dragCount--;\n    if (this._dragCount === 0) {\n      this.exitCurrentMode();\n    }\n  };\n\n  return DraftEditor;\n}(React.Component);\n\nDraftEditor.defaultProps = {\n  blockRenderMap: DefaultDraftBlockRenderMap,\n  blockRendererFn: emptyFunction.thatReturnsNull,\n  blockStyleFn: emptyFunction.thatReturns(''),\n  keyBindingFn: getDefaultKeyBinding,\n  readOnly: false,\n  spellCheck: false,\n  stripPastedStyles: false\n};\n\n\nmodule.exports = DraftEditor;"]},"metadata":{},"sourceType":"script"}